spring.application.name=demo
logging.level.com.wavefront=debug
server.port=8086
# App info
app.name=spring-petclinic

# database init, supports mysql too
database=h2
spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=info,health,env,loggers,mappings,configprops,probes,metrics,wavefront
wavefront.application.name=spring-petclinic
wavefront.application.service=spring-petclinic-service
# The below does NOT work. If custom tags does not work does does telegraf span processing work?
wavefront.application.custom-tags.instance_guid=${CF_INSTANCE_GUID}
wavefront.api-token=1111-23this-45is-678a-faketoken
wavefront.uri=http://telegraf.hub-collector.service.internal:8765
#the below tag is needed for metrics added with custom tag
management.metrics.tags.instance_guid=${CF_INSTANCE_GUID}
management.tracing.sampling.probability=0.5
management.endpoint.env.show-values=ALWAYS
management.endpoint.health.show-details=ALWAYS

# Git Info
management.info.env.enabled=true
management.info.git.mode=full
management.info.java.enabled=true
info.app.version="@project.version@"
info.spring.boot.version="@project.parent.version@"

# Logging
logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h
# Disables the governance starter checks when tests are run
tanzu.governance.fips.exit-on-failure=false